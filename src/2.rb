#!/usr/bin/ruby -w

# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#                         1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

current_value = 1 # initialize to the first number in the Fibonacci sequence
next_value = 2 # initialize to the second number in the Fibonacci sequence
even_sum = next_value # initialize sum of even numbers to include the first even value in the
# Fibonacci sequence, since this will be replaced in our loop

# keep iterating until a value exceedes four million, resetting our values to the next value in
# the Fibonnaci sequence and adding the even ones to our sum.
while next_value <= 4000000  do
  temp_value = current_value
  current_value = next_value
  next_value = temp_value + current_value
  # sum only the even numbered values
  if next_value % 2 == 0
    even_sum += next_value
  end
end

puts even_sum # print the sum of the even values.